# events { }

# http {

#   map $http_upgrade $connection_upgrade {
#       default upgrade;
#       ''      close;
#     }

#   server {
#     listen 80;
#     server_name localhost 127.0.0.1;

#     location / {
#         proxy_pass http://server:8000/;
#         proxy_set_header X-Real-IP  $remote_addr;
#         proxy_set_header X-Forwarded-For $remote_addr;
#     }

#   #  server {
#   #   listen 443 ssl;
#   #   server_name ec2-13-244-181-178.af-south-1.compute.amazonaws.com;
    
#   #   ssl_certificate /ssl/<your_ssl_cert.pem>;
#   #   ssl_certificate_key /ssl/<your_ssl_private_key.key>;
    
#   #   access_log /var/log/nginx/data-access.log combined;

#   #   location / {
#   #      proxy_pass http://shiny:3838/;
#   #      proxy_set_header X-Real-IP  $remote_addr;
#   #      proxy_set_header X-Forwarded-For $remote_addr;
#   #      proxy_set_header Host $host;
#   #      proxy_set_header X-Forwarded-Proto $scheme;
#   #      proxy_redirect http://shiny:3838/ $scheme://$http_host/;
#   #      proxy_http_version 1.1;
#   #      proxy_set_header Upgrade $http_upgrade;
#   #      proxy_set_header Connection $connection_upgrade;
#   #      proxy_read_timeout 20d;
#   #      proxy_buffering off;
#   #      }
#   #  }
# }
# }

events { }

http {

  map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

server {
    listen 80;
    listen [::]:80;

    server_name geturbn.io;
    server_tokens off;


    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://geturbn.io$request_uri;
    }
}


server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name geturbn.io;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/geturbn.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/geturbn.io/privkey.pem;


    location / {
        proxy_pass  http://server:8000;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        #proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }
    location ^~/graphql {
        proxy_pass  http://server:8000;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Frame-Options SAMEORIGIN;
        proxy_read_timeout 180;
  }
}

}


stream {
    upstream postgres {
        server db:5432;
    }
    server {
        listen 5030 so_keepalive=on;
        proxy_pass postgres;
        proxy_connect_timeout 60s;
        proxy_timeout 60s;
    }
}